import SwiftUI

struct Station: Identifiable {
    let id = UUID()
    let name: String
    let image: String
}

struct SearchView: View {
    @State private var searchText = ""
    @State private var selectedTab = 1  // Default: Search tab
    
    let stations = [
        Station(name: "DZRM 612", image: "dzrm"),
        Station(name: "Monster FM", image: "monster"),
        Station(name: "Yes FM", image: "yesfm"),
        Station(name: "Veritas 846", image: "veritas"),
        Station(name: "Wish 107.5", image: "wish"),
        Station(name: "Easy Rock", image: "easyrock")
    ]
    
    var body: some View {
        ZStack(alignment: .bottom) {
            
            VStack {
                // Fixed Header
                HStack {
                    Text("Search")
                        .font(.system(size: 28, weight: .bold))
                    
                    Spacer()
                    
                    Image(systemName: "person.circle")
                        .resizable()
                        .frame(width: 28, height: 28)
                }
                .padding(.horizontal)
                .padding(.top, 10)
                
                // Search Bar
                HStack {
                    Image(systemName: "magnifyingglass")
                        .foregroundColor(.gray)
                    TextField("Search", text: $searchText)
                }
                .padding()
                .background(Color(.systemGray6))
                .cornerRadius(10)
                .padding(.horizontal)
                
                // Station Grid
                ScrollView {
                    LazyVGrid(columns: [GridItem(.flexible()), GridItem(.flexible())], spacing: 16) {
                        ForEach(stations) { station in
                            VStack {
                                Image(station.image) // Add image assets in Assets.xcassets
                                    .resizable()
                                    .aspectRatio(contentMode: .fill)
                                    .frame(width: 150, height: 150)
                                    .cornerRadius(8)
                                
                                Text(station.name)
                                    .font(.caption)
                                    .foregroundColor(.primary)
                            }
                        }
                    }
                    .padding()
                }
                
                Spacer()
            }
            
            // Fixed Bottom Player + Navigation
            VStack(spacing: 0) {
                CurrentlyPlayingBar()
                BottomNavBar(selectedTab: $selectedTab)
            }
        }
    }
}

struct SearchView_Previews: PreviewProvider {
    static var previews: some View {
        SearchView()
    }
}

